<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts on Preetham Chalasani</title>
    <link>http://preethamchalasani.com/posts/</link>
    <description>Recent content in Posts on Preetham Chalasani</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sun, 05 Apr 2015 21:54:16 -0400</lastBuildDate>
    <atom:link href="http://preethamchalasani.com/posts/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>MatlabRosTutorial</title>
      <link>http://preethamchalasani.com/posts/matlab-ros-setup-tutorial/</link>
      <pubDate>Sun, 05 Apr 2015 21:54:16 -0400</pubDate>
      
      <guid>http://preethamchalasani.com/posts/matlab-ros-setup-tutorial/</guid>
      <description>

&lt;p&gt;This tutorial will briefly describe how to use the robotics systems toolbox provided in R2015a, to interface with ROS. [Subscriber uses callback function]&lt;/p&gt;

&lt;h3 id=&#34;setup:4648a9840b5c9d4c29a3abf329dfcd2c&#34;&gt;Setup&lt;/h3&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;I will be assuming that you have already innstalled &lt;a href=&#34;http://wiki.ros.org/hydro/Installation/Ubuntu&#34;&gt;ROS&lt;/a&gt; and had setup appropriate environment variables.&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Create a folder for the project&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;mkdir -p dev/tutorial
cd dev/tutorial
touch MatlabRos.m
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;First get the URI for the master&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;MasterHost = getenv(&#39;ROS_MASTER_URI&#39;);
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Next check whether a rosocre is running at that URI, if not, initialize one&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;Nodelist = [];
try
    Nodelist = rosnode(&#39;list&#39;);
    disp(&#39;Master already initialized&#39;)
catch
    rosinit(MasterHost);
    Nodelist = rosnode(&#39;list&#39;);
end
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Create a ros node for testing&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;Node = robotics.ros.Node(&#39;MatlabExperiment&#39;, MasterHost);
disp(&#39;Node &#39;&#39;/MatlabExperiment&#39;&#39; created&#39;)
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Create a publisher&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;PubMyName = robotics.ros.Publisher(Node, &#39;/set_my_name&#39; ,&#39;std_msgs/String&#39;);
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Create a subscriber and its corresponding callback function&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;SubMyName = rossubscriber(&#39;/set_my_name&#39;, @cbMyName);
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Put the following function in &lt;code&gt;cbMyName.m&lt;/code&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;function cbMyName(~, message)
    disp ([&#39;I recieved &#39;,   message.Data])
end
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Now try to puplish something using &lt;code&gt;PubMyName&lt;/code&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;msg = rosmessage(PubMyName);
msg.Data = &#39;Hello&#39;
send(PubMyName, msg)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;You should see the following output&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;I recieved Hello
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;!-- 
* Create a [timr](http://www.mathworks.com/help/matlab/matlab_prog/use-a-matlab-timer-object.html) object and specify the handle for a [Timer Callback Function](http://www.mathworks.com/help/matlab/matlab_prog/timer-callback-functions.html), say `cbFunction`. 

    ```
    % 250 hz
    timr = timer(&#39;Period&#39;, 0.004, &#39;ExecutionMode&#39;,&#39;fixedRate&#39;);     % 250 hz
    timr.TimerFcn = {@cbFunction, input1, input2};
    ```
    Start the timer

    ```
    start(timr)
    ```
    This will search for the function `cbFunction` in the search path and will call the function with the specified input at a specified frequency. Read more on timer callback functions [here](http://www.mathworks.com/help/matlab/matlab_prog/timer-callback-functions.html). 
--&gt;
</description>
    </item>
    
  </channel>
</rss>